# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  # Schedule to run once a day at midnight UTC
  schedule:
    - cron: '0 0 * * *'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - uses: actions/checkout@v4
    - uses: julia-actions/setup-julia@v2
      with:
        version: '1'
    - uses: julia-actions/cache@v2 # Keep this for Julia package caching

    - name: Restore Strava Data Cache
      id: cache-strava-data # Keep the ID
      uses: actions/cache/restore@v4 # Use restore action
      with:
        path: ./strava_data
        # Attempt to restore using a unique key for this run (likely miss)
        key: ${{ runner.os }}-strava-data-${{ github.run_id }}
        # Fallback to the latest cache matching this prefix
        restore-keys: |
          ${{ runner.os }}-strava-data-

    # Create directory/file only if NO cache was restored (neither primary nor partial)
    - run: mkdir ./strava_data || echo "Directory already exists"
      if: steps.cache-strava-data.outputs.cache-hit == ''
    - run: touch ./strava_data/user.json
      if: steps.cache-strava-data.outputs.cache-hit == ''

    - name: Download Strava data
      continue-on-error: true
      run: julia .github/workflows/download_all.jl
      env:
        STRAVA_CLIENT_ID: ${{ secrets.STRAVA_CLIENT_ID }}
        STRAVA_CLIENT_SECRET: ${{ secrets.STRAVA_CLIENT_SECRET }}
        STRAVA_DATA_DIR: ./strava_data
        USER_JSON: ${{ secrets.USER_JSON }}

    # Step to SAVE the Strava data cache unconditionally using the unique key
    - name: Save Strava Data Cache
      uses: actions/cache/save@v4
      if: always() # Ensures this step runs even if previous steps fail
      with:
        path: ./strava_data
        key: ${{ runner.os }}-strava-data-${{ github.run_id }} # Save with the unique key

    - name: Upload data.jld2 artifact
      uses: actions/upload-artifact@v4
      with:
        name: data-jld2
        path: ./strava_data/data.jld2
        overwrite: true
        compression-level: 9
